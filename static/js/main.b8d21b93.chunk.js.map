{"version":3,"sources":["core/components/login/login.js","core/utils/form-has-errors.js","core/hooks/useCurrentIndex.js","core/components/wizard/wizard-action.js","core/components/wizard/wizard.js","features/shipping-label-maker/shipping-label-header.js","features/shipping-label-maker/base-shipping-info.js","features/shipping-label-maker/shipping-info-context.js","features/shipping-label-maker/steps/steps.styles.js","features/shipping-label-maker/steps/address.js","features/shipping-label-maker/steps/actions.js","features/shipping-label-maker/steps/receiver-address.js","features/shipping-label-maker/steps/sender-address.js","features/shipping-label-maker/steps/shipping-weight.js","features/shipping-label-maker/steps/shipping-option.js","core/utils/currency.js","features/shipping-label-maker/steps/confirm.js","app.js","features/shipping-label-maker/shipping-label-maker.js","service-worker.js","index.js"],"names":["Login","WrappedComponent","Form","create","name","form","props","getFieldDecorator","validateFields","isFieldTouched","getFieldError","getFieldsError","useState","isAuthenticated","setIsAuthenticated","useEffect","fields","Email","Password","onSubmit","className","style","maxWidth","padding","Item","label","validateStatus","help","rules","required","min","message","prefix","type","color","placeholder","disabled","Object","keys","some","field","htmlType","width","useCurrentIndex","totalItems","infinite","Error","currentIndex","setCurrentIndex","WizardAction","prev","next","end","Wizard","Header","header","steps","wizardContext","onComplete","length","prevStep","nextStep","Step","progress","onAction","action","Title","Typography","StyledHeader","styled","percent","showInfo","BaseShippingInfo","from","street","city","state","zip","to","weight","shippingOption","ShippingInfoContext","createContext","Provider","Consumer","reducer","payload","ShippingInfoProvider","children","useReducer","baseShippingInfo","dispatch","value","shippingInfo","setReceiver","setSender","setWeight","setShippingOption","StyledForm","StyledRow","Row","Divider","div","OMGSUCHAHUGELETTER","h6","StyledTitle","hasErrors","onValuesChange","_","allValues","onValidate","onAddressChange","title","values","onFormChange","a","console","error","validate","Name","Street","City","State","Zip","baseLayout","labelCol","md","lg","wrapperCol","level","data-testid","initialValue","marginLeft","Actions","isValid","isLastStep","text","justify","onClick","ReceiverAddress","setIsValid","address","SenderAddress","getFieldValue","Weight","span","onChange","ShippingOptions","ground","priority","hasValue","setHasValue","Group","e","parseInt","target","defaultValue","buttonStyle","Button","locale","currency","Intl","NumberFormat","Confirm","loading","setLoading","setTimeout","shippingCost","currencyFormatter","format","formattedShippingRate","today","Date","toLocaleDateString","month","day","year","zone","Math","round","random","rate","letter","multiplier","qrCodeValue","JSON","stringify","column","bordered","marginBottom","fontSize","theme","textAlign","lineHeight","offset","size","xs","Layout","Content","Foo","useContext","ShippingWeight","ShippingOption","window","print","App","minHeight","marginTop","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oOAsGeA,MA9Ff,SAAeC,GA2Fb,OAAOC,IAAKC,OAAO,CAAEC,KAAM,gBAApBF,CA1FP,YAAsC,IAAnBG,EAAkB,EAAlBA,KAASC,EAAS,wBAEjCC,EAKEF,EALFE,kBACAC,EAIEH,EAJFG,eACAC,EAGEJ,EAHFI,eACAC,EAEEL,EAFFK,cACAC,EACEN,EADFM,eANiC,EAQWC,oBAAS,GARpB,mBAQ5BC,EAR4B,KAQXC,EARW,KAcnC,GAJAC,oBAAU,WACRP,KACC,CAACA,IAEAK,EACF,OAAO,kBAACZ,EAAqBK,GAG/B,IC3BkCU,ED2B5BC,EAAQR,EAAe,UAAYC,EAAc,SACjDQ,EAAWT,EAAe,aAAeC,EAAc,YAM7D,OACE,oCACE,4EACA,kBAAC,IAAD,CACES,SARe,WACnBL,GAAmB,IAQfM,UAAU,aACVC,MAAO,CAAEC,SAAU,IAAKC,QAAS,KAEjC,kBAAC,IAAKC,KAAN,CACEC,MAAM,QACNC,eAAgBT,EAAQ,QAAU,GAClCU,KAAMV,GAAS,IAEdV,EAAkB,QAAS,CAC1BqB,MAAO,CACL,CAAEC,UAAU,EAAMC,IAAK,EAAGC,QAAS,8BAFtCxB,CAKC,kBAAC,IAAD,CACEyB,OACE,kBAAC,IAAD,CAAMC,KAAK,OAAOZ,MAAO,CAAEa,MAAO,qBAEpCC,YAAY,YAIlB,kBAAC,IAAKX,KAAN,CACEC,MAAM,WACNC,eAAgBR,EAAW,QAAU,GACrCS,KAAMT,GAAY,IAEjBX,EAAkB,WAAY,CAC7BqB,MAAO,CACL,CACEC,UAAU,EACVC,IAAK,EACLC,QAAS,iCALdxB,CASC,kBAAC,IAAD,CACEyB,OACE,kBAAC,IAAD,CAAMC,KAAK,OAAOZ,MAAO,CAAEa,MAAO,qBAEpCD,KAAK,WACLE,YAAY,eAKlB,kBAAC,IAAKX,KAAN,KACE,kBAAC,IAAD,CACES,KAAK,UACLG,UCvFwBpB,EDuFAL,ICtF7B0B,OAAOC,KAAKtB,GAAQuB,KAAK,SAAAC,GAAK,OAAIxB,EAAOwB,MDuFpCC,SAAS,SACTrB,UAAU,oBACVC,MAAO,CAAEqB,MAAO,SALlB,gB,wBE3DGC,MAxBf,SAAyBC,GAA+B,IAAnBC,EAAkB,wDACrD,GAA0B,qBAAfD,EACT,MAAM,IAAIE,MAAM,wDAFmC,MAKblC,mBAAS,GALI,mBAK9CmC,EAL8C,KAKhCC,EALgC,KAqBrD,MAAO,CAACD,EAdS,YACVF,GAA6B,IAAjBE,IAGjBC,EAAiC,IAAjBD,EAAqBH,EAAa,EAAIG,EAAe,IAGtD,YACVF,GAAYE,EAAe,IAAMH,IAGtCI,EAAgBD,IAAiBH,EAAa,EAAI,EAAIG,EAAe,MCd1DE,EANM,CACnBC,KAAM,EACNC,KAAM,EACNC,IAAK,GCIQ,SAASC,EAAT,GAKX,IAJMC,EAIP,EAJDC,OACAC,EAGC,EAHDA,MACAC,EAEC,EAFDA,cACAC,EACC,EADDA,WACC,EAC0Cf,EAAgBa,EAAMG,QADhE,mBACMZ,EADN,KACoBa,EADpB,KAC8BC,EAD9B,KAmBKC,EAAON,EAAMT,GACnB,OACE,oCACE,kBAACO,EAAD,CAAQS,UAAYhB,EAAe,GAAKS,EAAMG,OAAU,MACxD,kBAACG,EAAD,CAAML,cAAeA,EAAeO,SApBnB,SAAAC,GACnB,OAAQA,GACN,KAAKhB,EAAaC,KAChBU,IACA,MACF,KAAKX,EAAaE,KAChBU,IACA,MACF,KAAKZ,EAAaG,IAChBM,IACA,MACF,QACE,MAAM,IAAIZ,MAAM,4B,wICtBhBoB,EAAUC,IAAVD,MAEFE,EAAeC,IAAOd,OAAV,KAaHD,MATf,YAA+B,IAAbS,EAAY,EAAZA,SAChB,OACE,kBAACK,EAAD,KACE,kBAACF,EAAD,6BACA,kBAAC,IAAD,CAAUI,QAASP,EAAUQ,UAAU,M,SCI9BC,EAnBU,CACvBC,KAAM,CACJrE,KAAM,GACNsE,OAAQ,GACRC,KAAM,GACNC,MAAO,GACPC,IAAK,IAEPC,GAAI,CACF1E,KAAM,GACNsE,OAAQ,GACRC,KAAM,GACNC,MAAO,GACPC,IAAK,IAEPE,OAAQ,EACRC,eAAgB,G,mjBCZlB,IAAIC,EAAsBC,0BAClBC,EAAuBF,EAAvBE,SAAuBF,EAAbG,SAElB,SAASC,EAAQT,EAAOX,GACtB,OAAQA,EAAOhC,MACb,IAAK,WACH,OAAO,EAAP,GACK2C,EADL,CAEEE,GAAIb,EAAOqB,UAEf,IAAK,SACH,OAAO,EAAP,GACKV,EADL,CAEEH,KAAMR,EAAOqB,UAEjB,IAAK,SACH,OAAO,EAAP,GACKV,EADL,CAEEG,OAAQd,EAAOqB,UAEnB,IAAK,iBACH,OAAO,EAAP,GACKV,EADL,CAEEI,eAAgBf,EAAOqB,UAE3B,QACE,MAAM,IAAIxC,MAAM,uDAItB,SAASyC,EAAT,GAA6C,IAAbC,EAAY,EAAZA,SAAY,EAChBC,qBAAWJ,EAASK,GADJ,mBACnCd,EADmC,KAC5Be,EAD4B,KAE1C,OACE,kBAACR,EAAD,CACES,MAAO,CACLC,aAAcjB,EACdkB,YAAa,SAAAR,GAAO,OAAIK,EAAS,CAAE1D,KAAM,WAAYqD,aACrDS,UAAW,SAAAT,GAAO,OAAIK,EAAS,CAAE1D,KAAM,SAAUqD,aACjDU,UAAW,SAAAV,GAAO,OAAIK,EAAS,CAAE1D,KAAM,SAAUqD,aACjDW,kBAAmB,SAAAX,GAAO,OACxBK,EAAS,CAAE1D,KAAM,iBAAkBqD,eAGtCE,G,mqBC1CCtB,EAAUC,IAAVD,MAIFgC,EAAa7B,YAAOnE,IAAPmE,CAAH,KAIV8B,EAAY9B,YAAO+B,IAAP/B,CAAH,KAITgC,EAAUhC,IAAOiC,IAAV,KAKPC,EAAqBlC,IAAOmC,GAAV,KAQlBC,EAAcpC,YAAOH,EAAPG,CAAH,KCpBTH,EAAUC,IAAVD,MAER,SAASwC,EAAU1F,GACjB,OAAOqB,OAAOC,KAAKtB,GAAQuB,KAAK,SAAAC,GAAK,OAAIxB,EAAOwB,KA2JnCtC,UAAKC,OAAO,CACnBwG,eADmB,mDACmCC,EAAGC,GADtC,mFACFC,EADE,EACFA,WAAYC,EADV,EACUA,gBAAiB1G,EAD3B,EAC2BA,KAC1CM,EAAmBN,EAAnBM,eAFe,SAGJA,IAHI,cAId+F,EAAU/F,KAEjBmG,GAAW,IAEXC,EAAgBF,GAChBC,GAAW,IATU,oGAAZ5G,CAxJf,YAAqE,IAAlDG,EAAiD,EAAjDA,KAAM2G,EAA2C,EAA3CA,MAAqBC,GAAsB,EAApCC,aAAoC,EAAtBD,QAAQH,EAAc,EAAdA,WAC5CtG,EAAmBH,EAAnBG,eACRO,oBAAU,WAAM,2CACd,sBAAAoG,EAAA,8EAEU3G,IAFV,OAGIsG,GAAW,GAHf,gDAKIM,QAAQC,MAAR,MACAP,GAAW,GANf,wDADc,uBAAC,WAAD,wBAUdQ,IACC,CAAC9G,EAAgBsG,IAb8C,IAe1DvG,EAAqDF,EAArDE,kBAAmBG,EAAkCL,EAAlCK,cAAeD,EAAmBJ,EAAnBI,eACpC8G,EAAO9G,EAAe,SAAWC,EAAc,QAC/C8G,EAAS/G,EAAe,WAAaC,EAAc,UACnD+G,EAAOhH,EAAe,SAAWC,EAAc,QAC/CgH,EAAQjH,EAAe,UAAYC,EAAc,SACjDiH,EAAMlH,EAAe,QAAUC,EAAc,OAE7CkH,EAAa,CACjBC,SAAU,CACRC,GAAI,GACJC,GAAI,GAENC,WAAY,CACVF,GAAI,GACJC,GAAI,KAIR,OACE,oCACE,kBAAC,EAAD,CAAOE,MAAO,GAAIjB,GAClB,kBAACd,EAAD,CAAYgC,cAAY,gBACtB,kBAAC,IAAK1G,KAAN,eACEC,MAAM,OACNC,eAAgB6F,EAAO,QAAU,GACjC5F,KAAM4F,GAAQ,IACVK,GAEHrH,EAAkB,OAAQ,CACzBqB,MAAO,CACL,CAAEC,UAAU,EAAMC,IAAK,EAAGC,QAAS,4BAErCoG,aAAclB,EAAO7G,MAJtBG,CAMC,kBAAC,IAAD,CACEyB,OAAQ,kBAAC,IAAD,CAAMC,KAAK,OAAOZ,MAAO,CAAEa,MAAO,qBAC1CC,YAAY,WAIlB,kBAAC,IAAKX,KAAN,eACEC,MAAM,SACNC,eAAgB8F,EAAS,QAAU,GACnC7F,KAAM6F,GAAU,IACZI,GAEHrH,EAAkB,SAAU,CAC3BqB,MAAO,CACL,CAAEC,UAAU,EAAMC,IAAK,EAAGC,QAAS,8BAErCoG,aAAclB,EAAOvC,QAJtBnE,CAMC,kBAAC,IAAD,CACEyB,OAAQ,kBAAC,IAAD,CAAMC,KAAK,OAAOZ,MAAO,CAAEa,MAAO,qBAC1CC,YAAY,aAIlB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK4F,GAAI,IACP,kBAAC,IAAKvG,KAAN,CACEC,MAAM,OACNC,eAAgB+F,EAAO,QAAU,GACjC9F,KAAM8F,GAAQ,GACdI,SAAU,CAAEC,GAAI,GAAIC,GAAI,GACxBC,WAAY,CAAEF,GAAI,GAAIC,GAAI,IAC1B1G,MAAO,CAAE+G,WAAY,SAEpB7H,EAAkB,OAAQ,CACzBqB,MAAO,CACL,CAAEC,UAAU,EAAMC,IAAK,EAAGC,QAAS,4BAErCoG,aAAclB,EAAOtC,MAJtBpE,CAMC,kBAAC,IAAD,CACEyB,OACE,kBAAC,IAAD,CAAMC,KAAK,OAAOZ,MAAO,CAAEa,MAAO,qBAEpCC,YAAY,YAKpB,kBAAC,IAAD,CAAK4F,GAAI,GACP,kBAAC,IAAKvG,KAAN,CACEC,MAAM,QACNC,eAAgBgG,EAAQ,QAAU,GAClC/F,KAAM+F,GAAS,GACfG,SAAU,CAAEC,GAAI,GAAIC,GAAI,GACxBC,WAAY,CAAEF,GAAI,GAAIC,GAAI,KAEzBxH,EAAkB,QAAS,CAC1BqB,MAAO,CACL,CACEC,UAAU,EACVC,IAAK,EACLC,QAAS,6BAGboG,aAAclB,EAAOrC,OARtBrE,CAUC,kBAAC,IAAD,CACEyB,OACE,kBAAC,IAAD,CAAMC,KAAK,OAAOZ,MAAO,CAAEa,MAAO,qBAEpCC,YAAY,aAKpB,kBAAC,IAAD,CAAK4F,GAAI,GACP,kBAAC,IAAKvG,KAAN,CACEC,MAAM,MACNC,eAAgBiG,EAAM,QAAU,GAChChG,KAAMgG,GAAO,GACbE,SAAU,CAAEC,GAAI,GAAIC,GAAI,GACxBC,WAAY,CAAEF,GAAI,GAAIC,GAAI,KAEzBxH,EAAkB,MAAO,CACxBqB,MAAO,CAAC,CAAEC,UAAU,EAAME,QAAS,2BACnCoG,aAAclB,EAAOpC,KAFtBtE,CAIC,kBAAC,IAAD,CACEyB,OACE,kBAAC,IAAD,CAAMC,KAAK,OAAOZ,MAAO,CAAEa,MAAO,qBAEpCC,YAAY,gBCrJf,SAASkG,EAAT,GAAqD,IAAlCrE,EAAiC,EAAjCA,SAAUsE,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WAAc,EAClC,CAC7BtG,KAAMsG,EAAa,UAAY,UAC/BC,KAAMD,EAAa,cAAgB,OACnCtE,OAAQsE,EAAatF,EAAaG,IAAMH,EAAaE,MAH/ClB,EADyD,EACzDA,KAAMuG,EADmD,EACnDA,KAAMvE,EAD6C,EAC7CA,OAMpB,OACE,kBAAC,IAAD,CAAKhC,KAAK,OAAOwG,QAAQ,UACvB,kBAAC,IAAD,CAAQC,QAAS,kBAAM1E,EAASf,EAAaC,QAA7C,QACA,kBAACmD,EAAD,MACA,kBAAC,IAAD,CACE6B,cAAY,cACZjG,KAAMA,EACNG,UAAWkG,EACXI,QAAS,kBAAM1E,EAASC,KAEvBuE,ICpBM,SAASG,GAAT,GAAuD,IAA5B3E,EAA2B,EAA3BA,SAAUP,EAAiB,EAAjBA,cAAiB,EACvC7C,oBAAS,GAD8B,mBAC9D0H,EAD8D,KACrDM,EADqD,KAG3D9C,EAA8BrC,EAA9BqC,YAEAhB,EAF8BrB,EAAjBoC,aAEbf,GAOR,OACE,yBAAKoD,cAAY,4BACf,kBAAC,EAAD,CACEjB,OAAQnC,EACRkC,MATQ,gCAURF,WAAY8B,EACZ7B,gBATsB,SAAA8B,GAC1B/C,EAAY+C,MAUV,kBAACR,EAAD,CAASrE,SAAUA,EAAUsE,QAASA,KCpB7B,SAASQ,GAAT,GAAqD,IAA5B9E,EAA2B,EAA3BA,SAAUP,EAAiB,EAAjBA,cAAiB,EACrC7C,oBAAS,GAD4B,mBAC5D0H,EAD4D,KACnDM,EADmD,KAezD7C,EAA4BtC,EAA5BsC,UAEAtB,EAF4BhB,EAAjBoC,aAEXpB,KAQR,OACE,yBAAKyD,cAAY,0BACf,kBAAC,EAAD,CACElB,MATQ,8BAURC,OAAQxC,EACRqC,WAAY8B,EACZ7B,gBAVsB,SAAA8B,GAC1B9C,EAAU8C,MAWR,kBAACR,EAAD,CAASrE,SAAUA,EAAUsE,QAASA,K,cC7BpCpE,GAAUC,IAAVD,MAgEOhE,WAAKC,QAALD,CA9Df,YAA4D,IAAlCG,EAAiC,EAAjCA,KAAM2D,EAA2B,EAA3BA,SAAUP,EAAiB,EAAjBA,cAChCjD,EAAmBH,EAAnBG,eACRO,oBAAU,WACRP,KACC,CAACA,IAJqD,IAMjDwF,EAA4BvC,EAA5BuC,UAEAjB,EAF4BtB,EAAjBoC,aAEXd,OAGNxE,EAIEF,EAJFE,kBACAG,EAGEL,EAHFK,cACAD,EAEEJ,EAFFI,eACAsI,EACE1I,EADF0I,cAGIC,EAASvI,EAAe,WAAaC,EAAc,UAOnD4H,GAAW5H,EAAc,aAAeqI,EAAc,UAC5D,OACE,oCACE,kBAAC,GAAD,CAAOd,MAAO,GAAd,6BACA,kBAAC/B,EAAD,CAAYgC,cAAY,wBACtB,kBAAC,IAAK1G,KAAN,eACEC,MAAM,SACNC,eAAgBsH,EAAS,QAAU,GACnCrH,KAAMqH,GAAU,IAbL,CACjBnB,SAAU,CAAEoB,KAAM,GAClBjB,WAAY,CAAEiB,KAAM,MAcb1I,EAAkB,SAAU,CAC3BqB,MAAO,CACL,CACEC,UAAU,EACVI,KAAM,SACNF,QAAS,kCAGboG,aAAcpD,GARfxE,CAUC,kBAAC,KAAD,CACEyB,OACE,kBAAC,IAAD,CAAMC,KAAK,UAAUZ,MAAO,CAAEa,MAAO,qBAEvCJ,IAAK,EACLK,YAAY,SACZ+G,SAAUlD,EACV3E,MAAO,CAAEqB,MAAO,aAKxB,kBAAC2F,EAAD,CAASrE,SAAUA,EAAUsE,QAASA,O,SC5DpCpE,GAAUC,IAAVD,MAEKiF,GAAkB,CAC7BC,OAAQ,EACRC,SAAU,GAuCGnJ,WAAKC,QAALD,CApCf,YAA2D,EAAjCG,KAAkC,IAA5B2D,EAA2B,EAA3BA,SAAUP,EAAiB,EAAjBA,cAChCwC,EAAoCxC,EAApCwC,kBACAjB,EADoCvB,EAAjBoC,aACnBb,eAFiD,EAIzBpE,mBAASoE,GAJgB,mBAIlDsE,EAJkD,KAIxCC,EAJwC,KAgBzD,OACE,oCACE,kBAAC,GAAD,CAAOrB,cAAY,kBAAkBD,MAAO,GAA5C,gCAGA,kBAAC/B,EAAD,CAAYgC,cAAY,wBACtB,kBAAC,IAAK1G,KAAN,eAAWC,MAAM,mBAhBJ,CACjBoG,SAAU,CAAEoB,KAAM,GAClBjB,WAAY,CAAEiB,KAAM,MAed,kBAAC,KAAMO,MAAP,CAAaN,SAZc,SAAAO,GACjCF,GAAY,GACZtD,EAAkByD,SAASD,EAAEE,OAAO/D,MAAO,MAUcgE,aAAc5E,EAAgB6E,YAAY,SAC3F,kBAAC,KAAMC,OAAP,CAAclE,MAAOuD,GAAgBC,QAArC,UACA,kBAAC,KAAMU,OAAP,CAAclE,MAAOuD,GAAgBE,UAArC,eAMN,kBAAChB,EAAD,CAASrE,SAAUA,EAAUsE,QAASgB,O,uEC9C7B,kBAACS,EAAD,uDAAU,QAAS1I,EAAnB,uDAA2B,WAAY2I,EAAvC,uDAAkD,MAAlD,OACb,IAAIC,KAAKC,aAAaH,EAAQ,CAC5B1I,QACA2I,cCaI9F,GAAUC,IAAVD,MAEO,SAASiG,GAAT,GAA+C,IAA5BnG,EAA2B,EAA3BA,SAAUP,EAAiB,EAAjBA,cAAiB,EAC7B7C,oBAAS,GADoB,mBACpDwJ,EADoD,KAC3CC,EAD2C,KAE3DtJ,oBAAU,WACRuJ,WAAW,WACTD,GAAW,IACV,MACF,IANwD,IAQnDxE,EAAiBpC,EAAjBoC,aACApB,EAAqCoB,EAArCpB,KAAMK,EAA+Be,EAA/Bf,GAAIC,EAA2Bc,EAA3Bd,OAAQC,EAAmBa,EAAnBb,eAGpBuF,EAAeC,KAAoBC,OADpB,GAEnB1F,GAEGC,IAAmBmE,GAAgBC,OAAS,EAAI,MAG/CsB,EAAwBF,KAAoBC,OAP7B,IAQfE,GAAQ,IAAIC,MAAOC,mBAAmB,QAAS,CACnDC,MAAO,OACPC,IAAK,UACLC,KAAM,YAEFC,EAAOC,KAAKC,MAAsB,GAAhBD,KAAKE,UACvBC,EAAO,CACX5J,MAAOuD,IAAmBmE,GAAgBC,OAAS,SAAW,WAC9DkC,OAAQtG,IAAmBmE,GAAgBC,OAAS,IAAM,IAC1DmC,WAAYvG,IAAmBmE,GAAgBC,OAAS,MAAQ,OAE5DoC,EAAcC,KAAKC,UAAU7F,GACnC,OACE,yBAAKqC,cAAY,oBACf,kBAAC,KAAD,CACEyD,OAAQ,EACRC,UAAQ,EACR5E,MAAM,OACN3F,MAAO,CAAEwK,aAAc,KAEvB,kBAAC,KAAarK,KAAd,CAAmBC,MAAM,iBACtBiJ,GAEH,kBAAC,KAAalJ,KAAd,CAAmBC,MAAM,mBAAzB,KACK4J,EAAKE,WADV,KACwBF,EAAK5J,MAD7B,KAGA,kBAAC,KAAaD,KAAd,CAAmBC,MAAM,UAAzB,KAAqCsD,EAArC,UACA,kBAAC,KAAavD,KAAd,CAAmBC,MAAM,SACvB,4BAAQyG,cAAY,iBAAiBqC,KAGzC,kBAACpE,EAAD,KACE,kBAAC,IAAD,CAAK4B,GAAI,GACP,kBAAC,IAAD,CAAM9F,KAAK,OAAOZ,MAAO,CAAEyK,SAAU,IAAMC,MAAM,aAEnD,kBAAC,IAAD,CAAKhE,GAAI,IAAT,8BACA,kBAAC,IAAD,CAAKA,GAAI,IACP,kBAAC,GAAD,CACEE,MAAO,EACP5G,MAAO,CAAE2K,UAAW,QAASH,aAAc,EAAGI,WAAY,IAF5D,gCAQJ,kBAAC9F,EAAD,KACE,kBAAC,IAAD,CAAK4B,GAAI,GACP,kBAACxB,EAAD,KAAqB8E,EAAKC,SAE5B,kBAAC,IAAD,CAAKvD,GAAI,EAAGmE,OAAQ,GAClB,kBAAC,GAAD,CAAOjE,MAAO,GAAd,4BACA,2BAAI0C,GACJ,8CAAoBlG,EAAKI,KACzB,2BACGE,EADH,OACesG,EAAK5J,MADpB,SAGA,mCAASwJ,IAEX,kBAAC,IAAD,CAAKlD,GAAI,GACP,kBAAC,KAAD,CAAQoE,KAAM,IAAKvG,MAAO4F,MAG9B,kBAACrF,EAAD,KACE,kBAACM,EAAD,CAAawB,MAAO,GAApB,QAA6BoD,EAAK5J,MAAlC,UAEF,kBAAC0E,EAAD,KACE,kBAAC,IAAD,CAAK4B,GAAI,IACP,iCACE,6BAAMtD,EAAKrE,MACX,6BAAMqE,EAAKC,QACX,uCAASD,EAAKE,KAAd,YAAsBF,EAAKG,MAA3B,aAAqCH,EAAKI,QAG9C,kBAAC,IAAD,CAAKkD,GAAI,GAAImE,OAAQ,IACnB,kBAAC,KAAD,CAAMlF,MAAM,oBAAoBoD,QAASA,GACvC,6BAAMtF,EAAG1E,MACT,6BAAM0E,EAAGJ,QACT,uCAASI,EAAGH,KAAZ,YAAoBG,EAAGF,MAAvB,aAAiCE,EAAGD,SAI1C,kBAACsB,EAAD,KACE,kBAAC,IAAD,CAAKiG,GAAI,IACP,yBAAK/K,MAAO,CAAE2K,UAAW,WAAzB,oBAEF,kBAAC,IAAD,CAAKI,GAAI,IACP,yBAAK/K,MAAO,CAAE2K,UAAW,WACvB,kBAAC,KAAD,CAASpG,MAAM,2BAIrB,kBAAC,KAAD,MACA,kBAACyC,EAAD,CAASrE,SAAUA,EAAUsE,SAAS,EAAMC,YAAY,K,ICvHtDjF,GAAoB+I,IAApB/I,OAAQgJ,GAAYD,IAAZC,QAEVC,GAAMvM,ECEG,WACb,IAAMyD,EAAgB+I,qBAAWvH,GAE3BzB,EAAQ,CACZsF,GACAH,GACA8D,GACAC,GACAvC,IAOF,OACE,kBAAC9G,EAAD,CACEI,cAAeA,EACfF,OAAQD,EACRE,MAAOA,EACPE,WATkB,WACpBiJ,OAAOC,aDIIC,OAjBf,WACE,OACE,kBAAC,IAAD,CAAQxL,MAAO,CAAEyL,UAAW,UAC1B,kBAAC,GAAD,MACA,kBAACR,GAAD,CAASjL,MAAO,CAAEwK,aAAc,KAC9B,kBAAC,IAAD,CAAKxK,MAAO,CAAE0L,UAAW,KACvB,kBAAC,IAAD,CAAK9D,KAAM,GAAIiD,OAAQ,GACrB,kBAAC3G,EAAD,KACE,kBAACgH,GAAD,Y,OETMS,QACW,cAA7BL,OAAOM,SAASC,UAEe,UAA7BP,OAAOM,SAASC,UAEhBP,OAAOM,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.b8d21b93.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Form from 'antd/es/form'\nimport Icon from 'antd/es/icon'\nimport Input from 'antd/es/input'\nimport Button from 'antd/es/button'\n\nimport formHasErrors from 'core/utils/form-has-errors'\n\nfunction Login(WrappedComponent) {\n  function Wrapped({ form, ...props }) {\n    const {\n      getFieldDecorator,\n      validateFields,\n      isFieldTouched,\n      getFieldError,\n      getFieldsError\n    } = form\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\n\n    useEffect(() => {\n      validateFields()\n    }, [validateFields])\n\n    if (isAuthenticated) {\n      return <WrappedComponent {...props} />\n    }\n\n    const Email = isFieldTouched('email') && getFieldError('email')\n    const Password = isFieldTouched('password') && getFieldError('password')\n\n    const handleSubmit = () => {\n      setIsAuthenticated(true)\n    }\n\n    return (\n      <>\n        <h1>Please Login to our Sooper Secure website...</h1>\n        <Form\n          onSubmit={handleSubmit}\n          className=\"login-form\"\n          style={{ maxWidth: 300, padding: 24 }}\n        >\n          <Form.Item\n            label=\"Email\"\n            validateStatus={Email ? 'error' : ''}\n            help={Email || ''}\n          >\n            {getFieldDecorator('email', {\n              rules: [\n                { required: true, min: 5, message: 'Please input your email!' }\n              ]\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                }\n                placeholder=\"Email\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Password\"\n            validateStatus={Password ? 'error' : ''}\n            help={Password || ''}\n          >\n            {getFieldDecorator('password', {\n              rules: [\n                {\n                  required: true,\n                  min: 5,\n                  message: 'Please input your Password!'\n                }\n              ]\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                }\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            )}\n          </Form.Item>\n\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              disabled={formHasErrors(getFieldsError())}\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n              style={{ width: '100%' }}\n            >\n              Log in\n            </Button>\n          </Form.Item>\n        </Form>\n      </>\n    )\n  }\n  return Form.create({ name: 'normal_login' })(Wrapped)\n}\n\nexport default Login\n","export default function formHasErrors(fields) {\n  return Object.keys(fields).some(field => fields[field])\n}\n","import { useState } from 'react'\n\nfunction useCurrentIndex(totalItems, infinite = false) {\n  if (typeof totalItems === 'undefined') {\n    throw new Error('You must pass totalItems to the useCurrentIndex hook')\n  }\n\n  const [currentIndex, setCurrentIndex] = useState(0)\n\n  const prevStep = () => {\n    if (!infinite && currentIndex === 0) {\n      return\n    }\n    setCurrentIndex(currentIndex === 0 ? totalItems - 1 : currentIndex - 1)\n  }\n\n  const nextStep = () => {\n    if (!infinite && currentIndex + 1 === totalItems) {\n      return\n    }\n    setCurrentIndex(currentIndex === totalItems - 1 ? 0 : currentIndex + 1)\n  }\n\n  return [currentIndex, prevStep, nextStep]\n}\n\nexport default useCurrentIndex\n","const WizardAction = {\n  prev: 1,\n  next: 2,\n  end: 3\n}\n\nexport default WizardAction\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport useCurrentIndex from 'core/hooks/useCurrentIndex'\n\nimport WizardAction from './wizard-action'\n\nexport default function Wizard({\n  header: Header,\n  steps,\n  wizardContext,\n  onComplete\n}) {\n  const [currentIndex, prevStep, nextStep] = useCurrentIndex(steps.length)\n\n  const handleAction = action => {\n    switch (action) {\n      case WizardAction.prev:\n        prevStep()\n        break\n      case WizardAction.next:\n        nextStep()\n        break\n      case WizardAction.end:\n        onComplete()\n        break\n      default:\n        throw new Error('Invalid Wizard Step')\n    }\n  }\n\n  const Step = steps[currentIndex]\n  return (\n    <>\n      <Header progress={((currentIndex + 1) / steps.length) * 100} />\n      <Step wizardContext={wizardContext} onAction={handleAction} />\n    </>\n  )\n}\n\nWizard.propTypes = {\n  header: PropTypes.func.isRequired,\n  steps: PropTypes.array,\n  wizardContext: PropTypes.object,\n  onComplete: PropTypes.func\n}\n","import React from 'react'\nimport Typography from 'antd/es/typography'\nimport Progress from 'antd/es/progress'\nimport styled from 'styled-components'\n\nconst { Title } = Typography\n\nconst StyledHeader = styled.header`\n  margin-bottom: 40px;\n`\n\nfunction Header({ progress }) {\n  return (\n    <StyledHeader>\n      <Title>Shipping Label Maker</Title>\n      <Progress percent={progress} showInfo={false} />\n    </StyledHeader>\n  )\n}\n\nexport default Header\n","const BaseShippingInfo = {\n  from: {\n    name: '',\n    street: '',\n    city: '',\n    state: '',\n    zip: ''\n  },\n  to: {\n    name: '',\n    street: '',\n    city: '',\n    state: '',\n    zip: ''\n  },\n  weight: 0,\n  shippingOption: 1\n}\n\nexport default BaseShippingInfo\n","import React, { createContext, useReducer } from 'react'\n\nimport baseShippingInfo from './base-shipping-info'\n\nlet ShippingInfoContext = createContext()\nconst { Provider, Consumer } = ShippingInfoContext\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'receiver':\n      return {\n        ...state,\n        to: action.payload\n      }\n    case 'sender':\n      return {\n        ...state,\n        from: action.payload\n      }\n    case 'weight':\n      return {\n        ...state,\n        weight: action.payload\n      }\n    case 'shippingOption':\n      return {\n        ...state,\n        shippingOption: action.payload\n      }\n    default:\n      throw new Error('Invalid action dispatched to shipping-info reducer')\n  }\n}\n\nfunction ShippingInfoProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, baseShippingInfo)\n  return (\n    <Provider\n      value={{\n        shippingInfo: state,\n        setReceiver: payload => dispatch({ type: 'receiver', payload }),\n        setSender: payload => dispatch({ type: 'sender', payload }),\n        setWeight: payload => dispatch({ type: 'weight', payload }),\n        setShippingOption: payload =>\n          dispatch({ type: 'shippingOption', payload })\n      }}\n    >\n      {children}\n    </Provider>\n  )\n}\n\nexport {\n  ShippingInfoProvider,\n  Consumer as ShippingInfoConsumer,\n  ShippingInfoContext\n}\n","import styled from 'styled-components'\nimport Form from 'antd/es/form'\nimport Row from 'antd/es/row'\nimport Typography from 'antd/es/typography'\n\nconst { Title } = Typography\n/*\n  too magic number-y\n*/\nconst StyledForm = styled(Form)`\n  min-height: 192px;\n`\n\nconst StyledRow = styled(Row)`\n  border: 1px solid black;\n  padding: 10px;\n`\nconst Divider = styled.div`\n  width: 8px;\n  display: inline-block;\n`\n\nconst OMGSUCHAHUGELETTER = styled.h6`\n  font-size: 200px;\n  line-height: 1;\n  text-align: center;\n  border-right: 1px solid black;\n  margin-bottom: 0;\n`\n\nconst StyledTitle = styled(Title)`\n  text-align: center;\n  && {\n    margin-bottom: 0;\n  }\n`\n\nexport { StyledForm, StyledRow, Divider, OMGSUCHAHUGELETTER, StyledTitle }\n","import React, { useEffect } from 'react'\nimport Form from 'antd/es/form'\nimport Input from 'antd/es/input'\nimport Icon from 'antd/es/icon'\nimport Typography from 'antd/es/typography'\nimport Row from 'antd/es/row'\nimport Col from 'antd/es/col'\n\nimport { StyledForm } from './steps.styles'\n\nconst { Title } = Typography\n\nfunction hasErrors(fields) {\n  return Object.keys(fields).some(field => fields[field])\n}\n\nfunction Address({ form, title, onFormChange, values, onValidate }) {\n  const { validateFields } = form\n  useEffect(() => {\n    async function validate() {\n      try {\n        await validateFields()\n        onValidate(true)\n      } catch (ex) {\n        console.error(ex)\n        onValidate(false)\n      }\n    }\n    validate()\n  }, [validateFields, onValidate])\n\n  const { getFieldDecorator, getFieldError, isFieldTouched } = form\n  const Name = isFieldTouched('name') && getFieldError('name')\n  const Street = isFieldTouched('street') && getFieldError('street')\n  const City = isFieldTouched('city') && getFieldError('city')\n  const State = isFieldTouched('state') && getFieldError('state')\n  const Zip = isFieldTouched('zip') && getFieldError('zip')\n\n  const baseLayout = {\n    labelCol: {\n      md: 24,\n      lg: 2\n    },\n    wrapperCol: {\n      md: 24,\n      lg: 22\n    }\n  }\n\n  return (\n    <>\n      <Title level={2}>{title}</Title>\n      <StyledForm data-testid=\"address-form\">\n        <Form.Item\n          label=\"Name\"\n          validateStatus={Name ? 'error' : ''}\n          help={Name || ''}\n          {...baseLayout}\n        >\n          {getFieldDecorator('name', {\n            rules: [\n              { required: true, min: 3, message: 'Please input your name!' }\n            ],\n            initialValue: values.name\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Name\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item\n          label=\"Street\"\n          validateStatus={Street ? 'error' : ''}\n          help={Street || ''}\n          {...baseLayout}\n        >\n          {getFieldDecorator('street', {\n            rules: [\n              { required: true, min: 3, message: 'Please input your street!' }\n            ],\n            initialValue: values.street\n          })(\n            <Input\n              prefix={<Icon type=\"home\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Street\"\n            />\n          )}\n        </Form.Item>\n        <Row>\n          <Col lg={10}>\n            <Form.Item\n              label=\"City\"\n              validateStatus={City ? 'error' : ''}\n              help={City || ''}\n              labelCol={{ md: 24, lg: 5 }}\n              wrapperCol={{ md: 24, lg: 17 }}\n              style={{ marginLeft: '-4px' }}\n            >\n              {getFieldDecorator('city', {\n                rules: [\n                  { required: true, min: 3, message: 'Please input your city!' }\n                ],\n                initialValue: values.city\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"home\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                  }\n                  placeholder=\"City\"\n                />\n              )}\n            </Form.Item>\n          </Col>\n          <Col lg={6}>\n            <Form.Item\n              label=\"State\"\n              validateStatus={State ? 'error' : ''}\n              help={State || ''}\n              labelCol={{ md: 24, lg: 7 }}\n              wrapperCol={{ md: 24, lg: 17 }}\n            >\n              {getFieldDecorator('state', {\n                rules: [\n                  {\n                    required: true,\n                    min: 2,\n                    message: 'Please input your state!'\n                  }\n                ],\n                initialValue: values.state\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"home\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                  }\n                  placeholder=\"State\"\n                />\n              )}\n            </Form.Item>\n          </Col>\n          <Col lg={8}>\n            <Form.Item\n              label=\"Zip\"\n              validateStatus={Zip ? 'error' : ''}\n              help={Zip || ''}\n              labelCol={{ md: 24, lg: 7 }}\n              wrapperCol={{ md: 24, lg: 17 }}\n            >\n              {getFieldDecorator('zip', {\n                rules: [{ required: true, message: 'Please input your zip!' }],\n                initialValue: values.zip\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"code\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                  }\n                  placeholder=\"Zip\"\n                />\n              )}\n            </Form.Item>\n          </Col>\n        </Row>\n      </StyledForm>\n    </>\n  )\n}\n\nexport default Form.create({\n  async onValuesChange({ onValidate, onAddressChange, form }, _, allValues) {\n    const { getFieldsError } = form\n    let errors = await getFieldsError()\n    errors = hasErrors(getFieldsError())\n    if (errors) {\n      onValidate(false)\n    } else {\n      onAddressChange(allValues)\n      onValidate(true)\n    }\n  }\n})(Address)\n","import React from 'react'\nimport Button from 'antd/es/button'\nimport Row from 'antd/es/row'\n\nimport { WizardAction } from 'core/components/wizard'\n\nimport { Divider } from './steps.styles'\n\nexport default function Actions({ onAction, isValid, isLastStep }) {\n  const { type, text, action } = {\n    type: isLastStep ? 'primary' : 'default',\n    text: isLastStep ? 'Print Label' : 'Next',\n    action: isLastStep ? WizardAction.end : WizardAction.next\n  }\n\n  return (\n    <Row type=\"flex\" justify=\"center\">\n      <Button onClick={() => onAction(WizardAction.prev)}>Prev</Button>\n      <Divider />\n      <Button\n        data-testid=\"next-button\"\n        type={type}\n        disabled={!isValid}\n        onClick={() => onAction(action)}\n      >\n        {text}\n      </Button>\n    </Row>\n  )\n}\n","import React, { useState } from 'react'\n\nimport Address from './address'\nimport Actions from './actions'\n\nexport default function ReceiverAddress({ onAction, wizardContext }) {\n  let [isValid, setIsValid] = useState(false)\n\n  const { setReceiver, shippingInfo } = wizardContext\n\n  const { to } = shippingInfo\n\n  const title = \"Enter the receiver's address:\"\n\n  const handleAddressChange = address => {\n    setReceiver(address)\n  }\n  return (\n    <div data-testid=\"receiver-address-wrapper\">\n      <Address\n        values={to}\n        title={title}\n        onValidate={setIsValid}\n        onAddressChange={handleAddressChange}\n      />\n      <Actions onAction={onAction} isValid={isValid} />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nimport Address from './address'\nimport Actions from './actions'\n\nexport default function SenderAddress({ onAction, wizardContext }) {\n  let [isValid, setIsValid] = useState(false)\n\n  /*\n   * How I would use context directly\n   *\n   * import { useContext } from 'React'\n   * import { ShippingInfoContext } from '../shipping-info-context'\n   *\n   * export default function ... {\n   *  const { setSender } = useContext(ShippingInfoContext)\n   * }\n   *\n   */\n\n  const { setSender, shippingInfo } = wizardContext\n\n  const { from } = shippingInfo\n\n  const title = \"Enter the sender's address:\"\n\n  const handleAddressChange = address => {\n    setSender(address)\n  }\n\n  return (\n    <div data-testid=\"sender-address-wrapper\">\n      <Address\n        title={title}\n        values={from}\n        onValidate={setIsValid}\n        onAddressChange={handleAddressChange}\n      />\n      <Actions onAction={onAction} isValid={isValid} />\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\nimport InputNumber from 'antd/es/input-number'\nimport Icon from 'antd/es/icon'\nimport Typography from 'antd/es/typography'\nimport Form from 'antd/es/form'\n\nimport { StyledForm } from './steps.styles'\nimport Actions from './actions'\n\nconst { Title } = Typography\n\nfunction ShippingWeight({ form, onAction, wizardContext }) {\n  const { validateFields } = form\n  useEffect(() => {\n    validateFields()\n  }, [validateFields])\n\n  const { setWeight, shippingInfo } = wizardContext\n\n  const { weight } = shippingInfo\n\n  const {\n    getFieldDecorator,\n    getFieldError,\n    isFieldTouched,\n    getFieldValue\n  } = form\n\n  const Weight = isFieldTouched('weight') && getFieldError('weight')\n\n  const baseLayout = {\n    labelCol: { span: 2 },\n    wrapperCol: { span: 22 }\n  }\n\n  const isValid = !getFieldError('weight') && !!getFieldValue('weight')\n  return (\n    <>\n      <Title level={2}>Enter the package weight:</Title>\n      <StyledForm data-testid=\"shipping-weight-form\">\n        <Form.Item\n          label=\"Weight\"\n          validateStatus={Weight ? 'error' : ''}\n          help={Weight || ''}\n          {...baseLayout}\n        >\n          {getFieldDecorator('weight', {\n            rules: [\n              {\n                required: true,\n                type: 'number',\n                message: 'Please input shipping weight!'\n              }\n            ],\n            initialValue: weight\n          })(\n            <InputNumber\n              prefix={\n                <Icon type=\"dropbox\" style={{ color: 'rgba(0,0,0,.25)' }} />\n              }\n              min={0}\n              placeholder=\"Weight\"\n              onChange={setWeight}\n              style={{ width: '100%' }}\n            />\n          )}\n        </Form.Item>\n      </StyledForm>\n      <Actions onAction={onAction} isValid={isValid} />\n    </>\n  )\n}\n\nexport default Form.create()(ShippingWeight)\n","import React, { useState } from 'react'\nimport Form from 'antd/es/form'\nimport Radio from 'antd/es/radio'\nimport Typography from 'antd/es/typography'\nimport { StyledForm } from './steps.styles'\n\nimport Actions from './actions'\n\nconst { Title } = Typography\n\nexport const ShippingOptions = {\n  ground: 1,\n  priority: 2\n}\n\nfunction ShippingOption({ form, onAction, wizardContext }) {\n  const { setShippingOption, shippingInfo } = wizardContext\n  const { shippingOption } = shippingInfo\n\n  const [hasValue, setHasValue] = useState(shippingOption)\n\n  const baseLayout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 12 }\n  }\n\n  const handleShippingOptionChange = e => {\n    setHasValue(true)\n    setShippingOption(parseInt(e.target.value, 10))\n  }\n\n  return (\n    <>\n      <Title data-testid=\"shipping-option\" level={2}>\n        Select your shipping option:\n      </Title>\n      <StyledForm data-testid=\"shipping-option-form\">\n        <Form.Item label=\"Shipping Option\" {...baseLayout}>\n          <Radio.Group onChange={handleShippingOptionChange} defaultValue={shippingOption} buttonStyle=\"solid\">\n            <Radio.Button value={ShippingOptions.ground}>Ground</Radio.Button>\n            <Radio.Button value={ShippingOptions.priority}>\n              Priority\n            </Radio.Button>\n          </Radio.Group>\n        </Form.Item>\n      </StyledForm>\n      <Actions onAction={onAction} isValid={hasValue} />\n    </>\n  )\n}\n\nexport default Form.create()(ShippingOption)\n","export default (locale = 'en-US', style = 'currency', currency = 'USD') =>\n  new Intl.NumberFormat(locale, {\n    style,\n    currency\n  })\n","import React, { useState, useEffect } from 'react'\nimport Card from 'antd/es/card'\nimport Typography from 'antd/es/typography'\nimport Col from 'antd/es/col'\nimport Icon from 'antd/es/icon'\nimport Descriptions from 'antd/es/descriptions'\nimport Divider from 'antd/es/divider'\nimport QRCode from 'qrcode.react'\nimport Barcode from 'react-barcode'\n\nimport currencyFormatter from 'core/utils/currency'\n\nimport { StyledRow, OMGSUCHAHUGELETTER, StyledTitle } from './steps.styles'\nimport Actions from './actions'\nimport { ShippingOptions } from './shipping-option'\n\nconst { Title } = Typography\n\nexport default function Confirm({ onAction, wizardContext }) {\n  const [loading, setLoading] = useState(true)\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false)\n    }, 1000)\n  }, [])\n\n  const { shippingInfo } = wizardContext\n  const { from, to, weight, shippingOption } = shippingInfo\n\n  const shippingRate = 0.4\n  const shippingCost = currencyFormatter().format(\n    weight *\n      shippingRate *\n      (shippingOption === ShippingOptions.ground ? 1 : 1.5)\n  )\n\n  const formattedShippingRate = currencyFormatter().format(shippingRate)\n  const today = new Date().toLocaleDateString('en-US', {\n    month: 'long',\n    day: 'numeric',\n    year: 'numeric'\n  })\n  const zone = Math.round(Math.random() * 10)\n  const rate = {\n    label: shippingOption === ShippingOptions.ground ? 'Ground' : 'Priority',\n    letter: shippingOption === ShippingOptions.ground ? 'G' : 'P',\n    multiplier: shippingOption === ShippingOptions.ground ? '1.0' : '1.5'\n  }\n  const qrCodeValue = JSON.stringify(shippingInfo)\n  return (\n    <div data-testid=\"shipping-confirm\">\n      <Descriptions\n        column={1}\n        bordered\n        title=\"Cost\"\n        style={{ marginBottom: 40 }}\n      >\n        <Descriptions.Item label=\"Shipping Rate\">\n          {formattedShippingRate}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Shipping Option\">\n          x {rate.multiplier} ({rate.label})\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Weight\">x {weight} (lbs)</Descriptions.Item>\n        <Descriptions.Item label=\"Total\">\n          <strong data-testid=\"shipping-cost\">{shippingCost}</strong>\n        </Descriptions.Item>\n      </Descriptions>\n      <StyledRow>\n        <Col lg={1}>\n          <Icon type=\"mail\" style={{ fontSize: 24 }} theme=\"twoTone\" />\n        </Col>\n        <Col lg={11}>Snail Mail Postage Service</Col>\n        <Col lg={12}>\n          <Title\n            level={4}\n            style={{ textAlign: 'right', marginBottom: 0, lineHeight: 1 }}\n          >\n            Clever Trademark Here &reg;\n          </Title>\n        </Col>\n      </StyledRow>\n      <StyledRow>\n        <Col lg={6}>\n          <OMGSUCHAHUGELETTER>{rate.letter}</OMGSUCHAHUGELETTER>\n        </Col>\n        <Col lg={8} offset={2}>\n          <Title level={4}>US POSTAGE AND FEES PAID</Title>\n          <p>{today}</p>\n          <p>Mailed From ZIP {from.zip}</p>\n          <p>\n            {weight} lb {rate.label} Rate\n          </p>\n          <p>Zone {zone}</p>\n        </Col>\n        <Col lg={8}>\n          <QRCode size={192} value={qrCodeValue} />\n        </Col>\n      </StyledRow>\n      <StyledRow>\n        <StyledTitle level={3}>SMPS {rate.label} Mail</StyledTitle>\n      </StyledRow>\n      <StyledRow>\n        <Col lg={12}>\n          <address>\n            <div>{from.name}</div>\n            <div>{from.street}</div>\n            <div>{`${from.city} ${from.state}, ${from.zip}`}</div>\n          </address>\n        </Col>\n        <Col lg={12} offset={12}>\n          <Card title=\"Recipient Address\" loading={loading}>\n            <div>{to.name}</div>\n            <div>{to.street}</div>\n            <div>{`${to.city} ${to.state}, ${to.zip}`}</div>\n          </Card>\n        </Col>\n      </StyledRow>\n      <StyledRow>\n        <Col xs={24}>\n          <div style={{ textAlign: 'center' }}>SMPS Tracking #</div>\n        </Col>\n        <Col xs={24}>\n          <div style={{ textAlign: 'center' }}>\n            <Barcode value=\"PublicisSapient FTW\" />\n          </div>\n        </Col>\n      </StyledRow>\n      <Divider />\n      <Actions onAction={onAction} isValid={true} isLastStep={true} />\n    </div>\n  )\n}\n","import React from 'react'\nimport Login from 'core/components/login'\nimport Layout from 'antd/es/layout'\nimport Row from 'antd/es/row'\nimport Col from 'antd/es/col'\n\nimport ShippingLabelMaker, {\n  ShippingInfoProvider\n} from 'features/shipping-label-maker'\n\nconst { Header, Content } = Layout\n\nconst Foo = Login(ShippingLabelMaker)\nfunction App() {\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Header />\n      <Content style={{ marginBottom: 40 }}>\n        <Row style={{ marginTop: 40 }}>\n          <Col span={14} offset={5}>\n            <ShippingInfoProvider>\n              <Foo />\n            </ShippingInfoProvider>\n          </Col>\n        </Row>\n      </Content>\n    </Layout>\n  )\n}\n\nexport default App\n","import React, { useContext } from 'react'\n\nimport Wizard from 'core/components/wizard'\n\nimport Header from './shipping-label-header'\nimport { ShippingInfoContext } from './shipping-info-context'\nimport {\n  SenderAddress,\n  ReceiverAddress,\n  ShippingWeight,\n  ShippingOption,\n  Confirm\n} from './steps'\n\nexport default function ShippingLabelMaker() {\n  const wizardContext = useContext(ShippingInfoContext)\n\n  const steps = [\n    SenderAddress,\n    ReceiverAddress,\n    ShippingWeight,\n    ShippingOption,\n    Confirm\n  ]\n\n  const generateLabel = () => {\n    window.print()\n  }\n\n  return (\n    <Wizard\n      wizardContext={wizardContext}\n      header={Header}\n      steps={steps}\n      onComplete={generateLabel}\n    />\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\nimport 'antd/dist/antd.css'\nimport * as serviceWorker from './service-worker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}